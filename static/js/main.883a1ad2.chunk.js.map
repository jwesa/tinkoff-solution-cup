{"version":3,"sources":["constants/routes.ts","constants/mockData.ts","store/models/expensesStore.ts","store/rootStore.ts","hooks/useStore.ts","pages/history/history.tsx","app-layout/components/navbar/navbar.styled.ts","app-layout/components/navbar/navbar.tsx","app-layout/components/body/body.styled.ts","app-layout/components/body/body.tsx","app-layout/components/title/title.styled.ts","app-layout/components/title/title.tsx","app-layout/app-layout.tsx","pages/add-costs/add-costs.styled.ts","components/input/input.styled.ts","components/input/input.tsx","components/button/button.styled.ts","components/button/button.tsx","components/datepicker/datepicker.tsx","pages/add-costs/add-costs.tsx","App.tsx","index.tsx"],"names":["routes","url","name","mockData","date","Date","amount","category","ExpenseModel","types","model","optional","string","number","ExpensesStore","list","array","views","self","actions","addCost","cost","push","rootStore","expenses","create","RootStoreContext","createContext","StoreProvider","Provider","useStore","store","useContext","Error","RADIAN","Math","PI","COLORS","History","observer","React","createElement","PieChart","width","height","Pie","data","cx","cy","labelLine","dataKey","label","_ref","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","concat","toFixed","map","entry","Cell","key","length","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","LinkWrapper","_templateObject2","Navbar","route","NavLink","to","Body","children","StyledTitle","h1","Title","pathname","useLocation","AppLayout","Fragment","StyledInput","input","Input","placeholder","onChange","StyledButton","button","Button","onClick","Datepicker","selected","DatePicker","initialExpense","AddCosts","_useState","useState","_useState2","_slicedToArray","expense","setExpense","handleChange","propertyName","value","prevState","_objectSpread","_defineProperty","e","target","handleClick","App","Routes","Route","path","element","createRoot","document","getElementById","render","BrowserRouter","basename","StrictMode"],"mappings":"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","file":"static/js/main.883a1ad2.chunk.js","sourcesContent":["export const routes = [\n  { url: \"/add_costs\", name: \"Добавить расходы\" },\n  { url: \"/history\", name: \"История расходов\" },\n];\n","export const mockData = [\n  { date: new Date(), amount: 50, category: \"Services\" },\n  { date: new Date(), amount: 120, category: \"Food\" },\n  { date: new Date(), amount: 200, category: \"Rent\" },\n];\n","import { types } from \"mobx-state-tree\";\n\nimport { mockData } from \"../../constants\";\n\nimport { IExpense } from \"../../types\";\n\nconst ExpenseModel = types.model({\n  date: types.optional(types.Date, 0),\n  category: types.optional(types.string, \"\"),\n  amount: types.optional(types.number, 0),\n});\n\nexport const ExpensesStore = types\n  .model({\n    list: types.optional(types.array(ExpenseModel), mockData),\n  })\n  .views((self) => ({\n    // get totalExpenses() {\n    //   return self.list.reduce((a, b) => a.amount + b.amount, 0);\n    // },\n  }))\n  .actions((self) => ({\n    addCost(cost: IExpense) {\n      self.list.push(cost);\n    },\n  }));\n","import { Instance, types } from \"mobx-state-tree\";\nimport { createContext } from \"react\";\nimport { ExpensesStore } from \"./models\";\n\nexport const rootStore = types\n  .model({\n    expenses: types.optional(ExpensesStore, {}),\n  })\n  .create({});\n\nexport const RootStoreContext = createContext<null | Instance<\n  typeof rootStore\n>>(null);\n\nexport const StoreProvider = RootStoreContext.Provider;\n","import { useContext } from \"react\";\nimport { RootStoreContext } from \"../store\";\n\nexport function useStore() {\n  const store = useContext(RootStoreContext);\n\n  if (store === null) {\n    throw new Error(\"Store cannot be null, please add a context provider\");\n  }\n  return store;\n}\n","import React from \"react\";\nimport { Cell, Pie, PieChart } from \"recharts\";\n\nimport { useStore } from \"../../hooks\";\nimport { observer } from \"mobx-react-lite\";\n\nconst RADIAN = Math.PI / 180;\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nexport const History = observer(() => {\n  const { expenses } = useStore();\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index,\n  }: any) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor={x > cx ? \"start\" : \"end\"}\n        dominantBaseline=\"central\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  return (\n    <div>\n      <PieChart width={250} height={250}>\n        <Pie\n          data={expenses.list}\n          cx={\"50%\"}\n          cy={\"50%\"}\n          labelLine={false}\n          dataKey=\"amount\"\n          label={renderCustomizedLabel}\n          outerRadius={100}\n          fill=\"#8884d8\"\n        />\n        {expenses.list.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </PieChart>\n    </div>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 15vw;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding-top: 40px;\n  background-color: #ffffff;\n  border-right: 1px solid #d9d9d9;\n  font-size: 18px;\n  line-height: 20px;\n  color: #363683;\n`;\n\nexport const LinkWrapper = styled.div`\n  padding: 12px 18px;\n\n  a {\n    text-decoration: none;\n  }\n\n  a:visited {\n    color: #363683;\n  }\n\n  :hover {\n    background-color: #f3f3f3;\n  }\n`;\n","import React from \"react\";\nimport { LinkWrapper, Wrapper } from \"./navbar.styled\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { routes } from \"../../../constants/routes\";\n\nexport const Navbar = () => {\n  return (\n    <Wrapper>\n      {routes.map((route) => (\n        <LinkWrapper key={route.url}>\n          <NavLink to={route.url}>{route.name}</NavLink>\n        </LinkWrapper>\n      ))}\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  height: 100%;\n  position: absolute;\n  right: 0;\n  padding: 20px;\n  background-color: #eeeeee;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./body.styled\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nexport const Body = ({ children }: Props) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n  padding-left: 10px;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { StyledTitle } from \"./title.styled\";\nimport { routes } from \"../../../constants\";\n\ninterface Props {\n  value: string;\n}\n\nexport const Title = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <StyledTitle>\n      {routes.map((route) => {\n        if (route.url === pathname) {\n          return route.name;\n        }\n      })}\n    </StyledTitle>\n  );\n};\n","import React from \"react\";\n\nimport { Body, Navbar, Title } from \"./components\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nexport const AppLayout = ({ children }: Props) => {\n  return (\n    <>\n      <Navbar />\n      <Body>\n        <>\n          <Title />\n          {children}\n        </>\n      </Body>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n  width: 250px;\n  height: 36px;\n  padding: 4px 8px;\n  border-radius: 6px;\n  border: 1px solid #ececec;\n  background-color: #ffffff;\n  color: #000d21;\n  outline: none;\n`;\n","import React from \"react\";\nimport { StyledInput } from \"./input.styled\";\n\ninterface Props {\n  // TODO временно\n  // value: string;\n  placeholder: string;\n  onChange: any;\n}\n\nexport const Input = ({ placeholder, onChange }: Props) => {\n  return <StyledInput placeholder={placeholder} onChange={onChange} />;\n};\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: fit-content;\n  height: 36px;\n  padding: 4px 8px;\n  border-radius: 6px;\n  background-color: #363683;\n  border: 1px solid #ffffff;\n  color: #ffffff;\n`;\n","import React from \"react\";\nimport { StyledButton } from \"./button.styled\";\n\ninterface Props {\n  label: string;\n  onClick: () => void;\n}\n\nexport const Button = ({ label, onClick }: Props) => {\n  return <StyledButton onClick={onClick}>{label}</StyledButton>;\n};\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\n\ninterface Props {\n  selected: Date | null | undefined;\n  onChange: (date: Date) => void;\n}\n\nexport const Datepicker = ({ selected, onChange }: Props) => {\n  return <DatePicker selected={selected} onChange={onChange} />;\n};\n","import React, { useState } from \"react\";\nimport { Wrapper } from \"./add-costs.styled\";\n\nimport { Button, Datepicker, Input } from \"../../components\";\n\nimport { IExpense } from \"../../types\";\n\nimport { useStore } from \"../../hooks\";\n\nconst initialExpense = { date: new Date(), category: \"\", amount: 0 };\n\nexport const AddCosts = () => {\n  const { expenses } = useStore();\n\n  const [expense, setExpense] = useState<IExpense>(initialExpense);\n\n  const handleChange = (\n    propertyName: string,\n    value: Date | string | number\n  ) => {\n    setExpense((prevState) => {\n      return { ...prevState, [propertyName]: value };\n    });\n  };\n\n  const handleClick = (expense: IExpense) => {\n    if (expense.category && expense.amount && expense.date) {\n      expenses.addCost(expense);\n      setExpense(initialExpense);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Datepicker\n        selected={expense.date}\n        onChange={(date) => {\n          handleChange(\"date\", date);\n        }}\n      />\n      <Input\n        // value={expense.category}\n        placeholder={\"Введите категорию расходов\"}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          handleChange(\"category\", e.target.value)\n        }\n      />\n      <Input\n        // value={String(expense.amount)}\n        placeholder={\"Введите сумму расходов\"}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          handleChange(\"amount\", +e.target.value)\n        }\n      />\n      <Button label={\"Добавить\"} onClick={() => handleClick(expense)} />\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { History } from \"./pages/history\";\nimport { AppLayout } from \"./app-layout\";\nimport { AddCosts } from \"./pages/add-costs\";\n\nexport const App = observer(() => {\n  return (\n    <AppLayout>\n      <Routes>\n        <Route path={\"history\"} element={<History />} />\n        <Route path={\"add_costs\"} element={<AddCosts />} />\n      </Routes>\n    </AppLayout>\n  );\n});\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// import '@fontsource/roboto/300.css';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\nimport \"./index.css\";\n\nimport { App } from \"./App\";\n\nimport { rootStore, StoreProvider } from \"./store\";\n\nconst root = createRoot(document.getElementById(\"root\") as HTMLElement);\nroot.render(\n  <BrowserRouter basename={\"/tinkoff-solution-cup\"}>\n    <React.StrictMode>\n      <StoreProvider value={rootStore}>\n        <App />\n      </StoreProvider>\n    </React.StrictMode>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}