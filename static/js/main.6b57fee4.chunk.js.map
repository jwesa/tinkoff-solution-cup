{"version":3,"sources":["pages/history/history.styled.ts","components/input/input.styled.ts","components/input/input.tsx","components/button/button.styled.ts","components/button/button.tsx","components/datepicker/datepicker.styled.ts","components/datepicker/datepicker.tsx","components/chart/chart.tsx","constants/routes.ts","constants/mockData.ts","store/models/expensesStore.ts","store/rootStore.ts","hooks/useStore.ts","pages/history/history.tsx","app-layout/components/navbar/navbar.styled.ts","app-layout/components/navbar/navbar.tsx","app-layout/components/body/body.styled.ts","app-layout/components/body/body.tsx","app-layout/components/title/title.styled.ts","app-layout/components/title/title.tsx","app-layout/app-layout.tsx","pages/add-costs/add-costs.styled.ts","pages/add-costs/add-costs.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","StyledSpan","span","_templateObject2","ListWrapper","_templateObject3","ListItem","_templateObject4","StyledInput","input","Input","_ref","value","placeholder","onChange","React","createElement","StyledButton","button","Button","label","onClick","Datepicker","selected","DatePicker","RADIAN","Math","PI","COLORS","Chart","list","PieChart","width","height","Pie","data","cx","cy","labelLine","dataKey","_ref2","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","concat","toFixed","map","entry","Cell","key","length","routes","url","name","mockData","date","Date","amount","category","ExpenseModel","types","model","optional","string","number","ExpensesStore","array","views","self","total","reduce","a","b","actions","addCost","cost","categoryExisting","item","toLowerCase","trim","push","rootStore","expenses","create","RootStoreContext","createContext","StoreProvider","Provider","useStore","store","useContext","Error","History","observer","_toConsumableArray","sort","expense","LinkWrapper","Navbar","route","NavLink","to","Body","children","StyledTitle","h1","Title","pathname","useLocation","AppLayout","Fragment","initialExpense","AddCosts","_useState","useState","_useState2","_slicedToArray","setExpense","handleChange","propertyName","prevState","_objectSpread","_defineProperty","e","target","String","handleClick","App","Routes","Route","path","element","createRoot","document","getElementById","render","BrowserRouter","basename","StrictMode"],"mappings":"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","file":"static/js/main.6b57fee4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledSpan = styled.span`\n  margin-bottom: 15px;\n`;\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  font-size: 1.6rem;\n  line-height: 2rem;\n`;\n\nexport const ListItem = styled.div`\n  span {\n    color: #00004b;\n  }\n\n  :last-child {\n    margin-top: 10px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n  width: 250px;\n  height: 36px;\n  padding: 4px 8px;\n  border-radius: 6px;\n  border: 1px solid #ececec;\n  background-color: #ffffff;\n  color: #000d21;\n  outline: none;\n`;\n","import React from \"react\";\nimport { StyledInput } from \"./input.styled\";\n\ninterface Props {\n  // TODO временно\n  value: string;\n  placeholder: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Input = ({ value, placeholder, onChange }: Props) => {\n  return (\n    <StyledInput value={value} placeholder={placeholder} onChange={onChange} />\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: fit-content;\n  height: 36px;\n  padding: 4px 8px;\n  border-radius: 6px;\n  background-color: #363683;\n  border: 1px solid #ffffff;\n  color: #ffffff;\n`;\n","import React from \"react\";\nimport { StyledButton } from \"./button.styled\";\n\ninterface Props {\n  label: string;\n  onClick: () => void;\n}\n\nexport const Button = ({ label, onClick }: Props) => {\n  return <StyledButton onClick={onClick}>{label}</StyledButton>;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  .react-datepicker {\n    width: 250px;\n    height: 250px;\n    padding: 4px 8px;\n    border-radius: 6px;\n    border: 1px solid #ececec;\n    background-color: #ffffff;\n    color: #000d21;\n    outline: none;\n  }\n`;\n","import React from \"react\";\n\nimport { Wrapper } from \"./datepicker.styled\";\n\nimport DatePicker from \"react-datepicker\";\n\ninterface Props {\n  selected: Date | null | undefined;\n  onChange: (date: Date) => void;\n}\n\nexport const Datepicker = ({ selected, onChange }: Props) => {\n  return (\n    <Wrapper>\n      <DatePicker selected={selected} onChange={onChange} />\n    </Wrapper>\n  );\n};\n","import { IExpense } from \"../../types\";\nimport { Cell, Pie, PieChart } from \"recharts\";\nimport React from \"react\";\n\ninterface Props {\n  list: IExpense[];\n}\n\nconst RADIAN = Math.PI / 180;\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nexport const Chart = ({ list }: Props) => {\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index,\n  }: any) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor={x > cx ? \"start\" : \"end\"}\n        dominantBaseline=\"central\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n  return (\n    <PieChart width={250} height={250}>\n      <Pie\n        data={list}\n        cx={\"50%\"}\n        cy={\"50%\"}\n        labelLine={false}\n        dataKey=\"amount\"\n        label={renderCustomizedLabel}\n        outerRadius={125}\n        fill=\"#8884d8\"\n      />\n      {list.map((entry, index) => (\n        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n      ))}\n    </PieChart>\n  );\n};\n","export const routes = [\n  { url: \"/add_costs\", name: \"Добавить расходы\" },\n  { url: \"/history\", name: \"История расходов\" },\n];\n","export const mockData = [\n  { date: new Date(), amount: 1750, category: \"Подписки на сервисы\" },\n  { date: new Date(), amount: 15000, category: \"Еда\" },\n  { date: new Date(), amount: 35000, category: \"Аренда жилья\" },\n];\n","import { types } from \"mobx-state-tree\";\n\nimport { mockData } from \"../../constants\";\n\nimport { IExpense } from \"../../types\";\n\nconst ExpenseModel = types.model({\n  date: types.optional(types.Date, 0),\n  category: types.optional(types.string, \"\"),\n  amount: types.optional(types.number, 0),\n});\n\nexport const ExpensesStore = types\n  .model({\n    list: types.optional(types.array(ExpenseModel), mockData),\n  })\n  .views((self) => ({\n    get total() {\n      return self.list.reduce((a, b) => a + b.amount, 0);\n    },\n  }))\n  .actions((self) => ({\n    addCost(cost: IExpense) {\n      let categoryExisting = false;\n\n      self.list.map((item) => {\n        if (\n          cost.category.toLowerCase().trim() ===\n          item.category.toLowerCase().trim()\n        ) {\n          item.amount += cost.amount;\n          categoryExisting = true;\n        }\n      });\n\n      if (!categoryExisting) {\n        self.list.push(cost);\n      }\n    },\n  }));\n","import { Instance, types } from \"mobx-state-tree\";\nimport { createContext } from \"react\";\nimport { ExpensesStore } from \"./models\";\n\nexport const rootStore = types\n  .model({\n    expenses: types.optional(ExpensesStore, {}),\n  })\n  .create({});\n\nexport const RootStoreContext = createContext<null | Instance<\n  typeof rootStore\n>>(null);\n\nexport const StoreProvider = RootStoreContext.Provider;\n","import { useContext } from \"react\";\nimport { RootStoreContext } from \"../store\";\n\nexport function useStore() {\n  const store = useContext(RootStoreContext);\n\n  if (store === null) {\n    throw new Error(\"Store cannot be null, please add a context provider\");\n  }\n  return store;\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { ListItem, ListWrapper, StyledSpan, Wrapper } from \"./history.styled\";\n\nimport { Chart } from \"../../components\";\n\nimport { useStore } from \"../../hooks\";\n\nexport const History = observer(() => {\n  const { expenses } = useStore();\n\n  return (\n    <Wrapper>\n      <Chart list={expenses.list} />\n      <ListWrapper>\n        <StyledSpan>Расходы по категориям</StyledSpan>\n        {[...expenses.list]\n          .sort((a, b) => b.amount - a.amount)\n          .map((expense) => {\n            return (\n              <ListItem key={expense.category}>\n                {expense.category} - <span>{expense.amount}</span>\n              </ListItem>\n            );\n          })}\n        <ListItem>Всего: {expenses.total}</ListItem>\n      </ListWrapper>\n    </Wrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 20vw;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding-top: 40px;\n  background-color: #ffffff;\n  border-right: 1px solid #d9d9d9;\n  font-size: 1.8rem;\n  line-height: 2rem;\n  color: #363683;\n`;\n\nexport const LinkWrapper = styled.div`\n  padding: 12px 18px;\n\n  a {\n    text-decoration: none;\n  }\n\n  a:visited {\n    color: #363683;\n  }\n\n  :hover {\n    background-color: #f3f3f3;\n  }\n`;\n","import React from \"react\";\nimport { LinkWrapper, Wrapper } from \"./navbar.styled\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { routes } from \"../../../constants/routes\";\n\nexport const Navbar = () => {\n  return (\n    <Wrapper>\n      {routes.map((route) => (\n        <LinkWrapper key={route.url}>\n          <NavLink to={route.url}>{route.name}</NavLink>\n        </LinkWrapper>\n      ))}\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 80%;\n  height: 100%;\n  position: absolute;\n  right: 0;\n  padding: 20px;\n  background-color: #eeeeee;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./body.styled\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nexport const Body = ({ children }: Props) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n  padding-left: 10px;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { StyledTitle } from \"./title.styled\";\nimport { routes } from \"../../../constants\";\n\ninterface Props {\n  value: string;\n}\n\nexport const Title = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <StyledTitle>\n      {routes.map((route) => {\n        if (route.url === pathname) {\n          return route.name;\n        }\n      })}\n    </StyledTitle>\n  );\n};\n","import React from \"react\";\n\nimport { Body, Navbar, Title } from \"./components\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nexport const AppLayout = ({ children }: Props) => {\n  return (\n    <>\n      <Navbar />\n      <Body>\n        <>\n          <Title />\n          {children}\n        </>\n      </Body>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import React, { useState } from \"react\";\nimport { Wrapper } from \"./add-costs.styled\";\n\nimport { Button, Datepicker, Input } from \"../../components\";\n\nimport { IExpense } from \"../../types\";\n\nimport { useStore } from \"../../hooks\";\n\nconst initialExpense = { date: new Date(), category: \"\", amount: 0 };\n\nexport const AddCosts = () => {\n  const { expenses } = useStore();\n\n  const [expense, setExpense] = useState<IExpense>(initialExpense);\n\n  const handleChange = (\n    propertyName: string,\n    value: Date | string | number\n  ) => {\n    setExpense((prevState) => {\n      return { ...prevState, [propertyName]: value };\n    });\n  };\n\n  const handleClick = (expense: IExpense) => {\n    if (expense.category && expense.amount && expense.date) {\n      expenses.addCost(expense);\n      setExpense(initialExpense);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Datepicker\n        selected={expense.date}\n        onChange={(date) => {\n          handleChange(\"date\", date);\n        }}\n      />\n      <Input\n        value={expense.category}\n        placeholder={\"Категория расходов\"}\n        onChange={(e) => handleChange(\"category\", e.target.value)}\n      />\n      <Input\n        value={expense.amount ? String(expense.amount) : \"\"}\n        placeholder={\"Сумма расходов\"}\n        onChange={(e) => handleChange(\"amount\", +e.target.value)}\n      />\n      <Button label={\"Добавить\"} onClick={() => handleClick(expense)} />\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { History } from \"./pages/history\";\nimport { AppLayout } from \"./app-layout\";\nimport { AddCosts } from \"./pages/add-costs\";\n\nexport const App = observer(() => {\n  return (\n    <AppLayout>\n      <Routes>\n        <Route path={\"history\"} element={<History />} />\n        <Route path={\"add_costs\"} element={<AddCosts />} />\n      </Routes>\n    </AppLayout>\n  );\n});\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nimport { App } from \"./App\";\n\nimport { rootStore, StoreProvider } from \"./store\";\n\nconst root = createRoot(document.getElementById(\"root\") as HTMLElement);\nroot.render(\n  <BrowserRouter basename={\"/tinkoff-solution-cup\"}>\n    <React.StrictMode>\n      <StoreProvider value={rootStore}>\n        <App />\n      </StoreProvider>\n    </React.StrictMode>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}