{"version":3,"sources":["App.tsx","store/rootStore.ts","index.tsx"],"names":["App","observer","React","createElement","rootStore","types","model","create","StoreProvider","createContext","Provider","createRoot","document","getElementById","render","BrowserRouter","basename","StrictMode","value"],"mappings":"0MAGaA,EAAMC,YAAS,WAC1B,OAAOC,IAAAC,cAAA,WAAK,iBCDDC,OAAYC,EACtBC,MAAM,IACNC,OAAO,IAMGC,EAJmBC,wBAE7B,MAE2CC,SCDjCC,qBAAWC,SAASC,eAAe,SAC3CC,OACHZ,IAAAC,cAACY,IAAa,CAACC,SAAU,yBACvBd,IAAAC,cAACD,IAAMe,WAAU,KACff,IAAAC,cAACK,EAAa,CAACU,MAAOd,GACpBF,IAAAC,cAACH,EAAG","file":"static/js/main.41d5adf6.chunk.js","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const App = observer(() => {\n  return <div>Test deploy</div>;\n});","import { Instance, types } from \"mobx-state-tree\";\nimport { createContext } from \"react\";\n\nexport const rootStore = types\n  .model({})\n  .create({});\n\nexport const RootStoreContext = createContext<null | Instance<\n  typeof rootStore\n>>(null);\n\nexport const StoreProvider = RootStoreContext.Provider;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nimport { App } from \"./App\";\n\nimport { rootStore, StoreProvider } from \"./store\";\n\nconst root = createRoot(document.getElementById(\"root\") as HTMLElement);\nroot.render(\n  <BrowserRouter basename={\"/tinkoff-solution-cup\"}>\n    <React.StrictMode>\n      <StoreProvider value={rootStore}>\n        <App />\n      </StoreProvider>\n    </React.StrictMode>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}